@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями
  */
img {
  display: block;
  max-width: 100%;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
}

/**
   Плавный скролл
  */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
}

/**
   Приводим к единому цвету svg-элементы
  */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Rubik";
  src: url("../fonts/Rubik-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Rubik";
  src: url("../fonts/Rubik-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Mulish";
  src: url("../fonts/Mulish-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Playfair Display";
  src: url("../fonts/PlayfairDisplay-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Playfair Display";
  src: url("../fonts/PlayfairDisplay-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Playfair Display";
  src: url("../fonts/PlayfairDisplay-SemiBold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-primary: #ff7757;
  --color-primary-light: #ffd2c7;
  --color-secondary: #61291c;
  --color-secondary-dark: #331811;
  --color-light: #fff;
  --color-dark: #172432;
  --color-yellow: #ffc107;
  --color-yellow-light: #fff8f1;
  --color-gray: #767e86;
  --border-radius: 26px;
  --border-radius-medium: 20px;
  --border-radius-small: 12px;
  --font-family-base: "Rubik", sans-serif;
  --font-family-accent: "Playfair Display", serif;
  --font-family-alt: "Mulish", sans-serif;
  --container-padding-x: 16px;
  --transition-duration: 0.2s;
}
@media (min-width: 321px) {
  :root {
    --container-padding-x: 20px;
  }
}
@media (min-width: 769px) {
  :root {
    --container-padding-x: 32px;
  }
}

.container {
  max-width: 100%;
  padding-inline: var(--container-padding-x);
}
@media (min-width: 1920px) {
  .container {
    max-width: 1556px;
    padding-inline: 0;
    margin-inline: auto;
  }
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

@media (max-width: 768px) {
  .hidden-tablet {
    display: none !important;
  }
}

@media (min-width: 769px) {
  .visible-tablet {
    display: none !important;
  }
}

body {
  font-size: 18px;
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1;
  color: var(--color-dark);
  background-color: var(--color-light);
}
@media (min-width: 1153px) {
  body {
    font-size: 24px;
  }
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1 {
  font-size: 40px;
}
@media (min-width: 321px) {
  h1 {
    font-size: 54px;
  }
}
@media (min-width: 769px) {
  h1 {
    font-size: 64px;
  }
}
@media (min-width: 1153px) {
  h1 {
    font-size: 84px;
  }
}

h2 {
  font-size: 40px;
}
@media (min-width: 321px) {
  h2 {
    font-size: 54px;
  }
}
@media (min-width: 769px) {
  h2 {
    font-size: 64px;
  }
}

h3 {
  font-size: 40px;
}
@media (min-width: 321px) {
  h3 {
    font-size: 54px;
  }
}/*# sourceMappingURL=styles.css.map */